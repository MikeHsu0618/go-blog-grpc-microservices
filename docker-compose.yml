version: "3.5"

services:
  db:
    image: postgres:12.4-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    networks:
      - backend

  blog-server:
    build:
      context: ./
      dockerfile: ./build/docker/blog/Dockerfile
    ports:
      - "50050:50050"
      - "8050:8050"
      - "9050:9050"
    depends_on:
      - db
    networks:
      - backend

  user-server:
    build:
      context: ./
      dockerfile: ./build/docker/user/Dockerfile
    ports:
      - "50051:50051"
      - "8051:8051"
      - "9051:9051"
    depends_on:
      - db
    networks:
      - backend

  post-server:
    build:
      context: ./
      dockerfile: ./build/docker/post/Dockerfile
    ports:
      - "50052:50052"
      - "8052:8052"
      - "9052:9052"
    depends_on:
      - db
    networks:
      - backend

  comment-server:
    build:
      context: ./
      dockerfile: ./build/docker/comment/Dockerfile
    ports:
      - "50053:50053"
      - "8053:8053"
      - "9053:9053"
    depends_on:
      - db
    networks:
      - backend

  auth-server:
    build:
      context: ./
      dockerfile: ./build/docker/auth/Dockerfile
    ports:
      - "50054:50054"
      - "8054:8054"
      - "9054:9054"
    depends_on:
      - db
    networks:
      - backend
#
#  dtm:
#    image: yedf/dtm
#    entrypoint:
#      - "/app/dtm/dtm"
#      - "-c=/app/dtm/configs/config.yaml"
#    volumes:
#      - ./dtm/config.yml:/app/dtm/configs/config.yaml # 将 dtm 配置文件挂载到容器里
#    ports:
#      - "${DTM_HTTP_PORT}:36789"
#      - "${DTM_GRPC_PORT}:36790"
#    networks:
#      - backend
#    restart: always

  dtm-server:
    image: yedf/dtm
    environment:
      - STORE_DRIVER=postgres
      - STORE_HOST=db
      - STORE_USER=postgres
      - STORE_PASSWORD=postgres
      - STORE_PORT=5432
    ports:
      - '36789:36789'
      - '36790:36790'
    depends_on:
      - db
    networks:
      - backend

networks:
  backend:
    driver: bridge